import sys
class server(process):
	def setup(nextServer):
		pass;

	def main():
		await(False)

	def receive(msg=('update',),from_=head):
		print('Update message received by head = ',self)
		child = head
		head = self.nextServer
		send(('updateChain',child),to=head)	
		

	def receive(msg=('updateChain',child),from_=head):
		print("-----------------------------------")
		print('Updating Chain = ',self)
		print("-----------------------------------")
		if hasattr(self,'nextServer'):
			head = self.nextServer
			send(('updateChain',child),to=head)	
		else:
			print("All Servers updated. Now request received by Tail. Sending response back to client ")
			send(('done',),to=child)



	def receive(msg=('query',),from_=tail):
		
		if hasattr(self,'nextServer'):
			tail = self.nextServer
			send(('done',),to=tail)	
		output('Query message received by tail')

class client(process):
	def setup(head,tail):
		pass

	def main():
		output('Client sending update message')
		print('Client calling update to ',head)
		send(('update',),to=head)
		# send(('query',),to=tail)
		await(False)

	def receive(msg=('done',),from_=child):
		output('Update Finished. Message Received by the client')

	def receive(msg=('done',),from_=tail):
		output('Query Finished. Message Received by the client')
		

def main():
	config(clock='Lamport')

	chainLength = 10;

	serverList = []

	for index in range(0,10):
		serverVar = new(server,num=1)
		serverList.append(serverVar)

	print(serverList)

	for index in range(0,9):
		currServer = serverList[index]
		nextServer = serverList[index+1]
		setup(currServer,(nextServer))

	for index in range(0,10):
		start(serverList[index])

	head = serverList[0]
	tail = serverList[9]
	customer = new(client,num=1)
	setup(customer,(head,tail))
	start(customer)
